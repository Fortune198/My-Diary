{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Bootcamp_FrontEnd\\\\05.React\\\\Projects\\\\final-project\\\\finalproject\\\\src\\\\pages\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { addDoc, collection, doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../firebase-config';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditPost() {\n  _s();\n  //we need states to keep track of the title and post content\n  const [title, setTitle] = useState(\"\");\n  const [postText, setPostText] = useState(\"\");\n  const location = useLocation();\n  const postsCollectionRef = collection(db, \"posts\");\n  const navigate = useNavigate();\n  const {\n    post\n  } = location.state || {};\n  useEffect(() => {\n    if (post) {\n      setTitle(post.title);\n      setPostText(post.postText);\n    }\n  }, [post]);\n\n  //we also need a function to handle the post submission\n  const updatePost = async () => {\n    const postDocRef = doc(db, 'posts', post.id);\n    await updateDoc(postDocRef, {\n      title,\n      postText\n    });\n    navigate('/'); // Redirect to home after post creation\n  };\n  useEffect(() => {\n    if (!isAuth) {\n      navigate('/login'); // Redirect to login if not authenticated\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cpContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title...\",\n          value: title,\n          onChange: event => {\n            setTitle(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGp\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: postText,\n          placeholder: \"Post...\",\n          onChange: event => {\n            setPostText(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: updatePost,\n        children: \" Update \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(EditPost, \"4oYRHN6SaOr99OUWZYsARx2XoX0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","addDoc","collection","doc","updateDoc","db","useNavigate","useLocation","jsxDEV","_jsxDEV","EditPost","_s","title","setTitle","postText","setPostText","location","postsCollectionRef","navigate","post","state","updatePost","postDocRef","id","isAuth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Bootcamp_FrontEnd/05.React/Projects/final-project/finalproject/src/pages/EditPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { addDoc, collection, doc, updateDoc } from 'firebase/firestore'\r\nimport { db } from '../firebase-config';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nfunction EditPost() {\r\n\r\n\r\n    //we need states to keep track of the title and post content\r\n    const [title, setTitle] = useState(\"\");\r\n    const [postText, setPostText] = useState(\"\");\r\n\r\n    const location = useLocation();\r\n    const postsCollectionRef = collection(db, \"posts\");\r\n    const navigate = useNavigate();\r\n    const { post } = location.state || {};\r\n\r\n    useEffect(() => {\r\n        if(post) {\r\n            setTitle(post.title);\r\n            setPostText(post.postText);\r\n        }\r\n    }, [post]);\r\n\r\n\r\n    //we also need a function to handle the post submission\r\n    const updatePost = async () => {\r\n        const postDocRef = doc(db, 'posts', post.id);\r\n        await updateDoc(postDocRef, {title, postText});\r\n        navigate('/'); // Redirect to home after post creation\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isAuth) {\r\n            navigate('/login'); // Redirect to login if not authenticated\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className='createPostPage'>\r\n            <div className='cpContainer'>\r\n                <h1>Edit Post</h1>\r\n                <div className='inputGp'>\r\n                    <label>Title:</label>\r\n                    <input type='text' placeholder='Title...' value={title} onChange={(event) => { setTitle(event.target.value) }} />\r\n                </div>\r\n                <div className='inputGp'>\r\n                    <label>Post:</label>\r\n                    <textarea value={postText} placeholder='Post...' onChange={(event) => { setPostText(event.target.value) }} />\r\n                </div>\r\n                <button className='nav-button' onClick={updatePost}> Update </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EditPost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}